.PHONY: build
.PHONY: run
.PHONY: clean
.PHONY: bin/second_stage.bin
.PHONY: clean_second_stage
.PHONY: bin/mbr_part_table.bin
.PHONY: clean_mbr_part_table
.PHONY: bin/fs_worker.bin
.PHONY: clean_fs_worker
.PHONY: ../%s
.PHONY: clean_kernel_bin

# -m 4G -drive 

FLAGS = -std=c++20 -masm=intel -O1 -Wno-error -c -nostdinc -nostdlib -fno-builtin -fno-stack-protector -ffreestanding -m32

#build: bin/mbr_part_table.bin bin/fs_worker.bin ../%%s bin/second_stage.bin
#	cd config && make ffs
#	nasm boot/filesystem.s -f bin -o bin/fs.bin
#	cd config && make mbr
#	nasm boot/mbr.s -f bin -o bin/mbr.bin
#	cd config && make disk_image

build: ../%s bin/mbr_part_table.bin bin/second_stage.bin bin/fs_worker.bin
	cd config && make format_fs
	nasm boot/filesystem.s -f bin -o bin/fs.bin
	cd config && make mbr
	nasm boot/mbr.s -f bin -o bin/mbr.bin
	cd config && make disk_image
#cat bin/mbr.bin bin/mbr_part_table.bin ../bin/kernel.bin > bin/OS.img

run:
	qemu-system-i386 -m 4G -drive format=raw,file=bin/OS.img

clean_kernel_bin:
	rm -rf ../%s
	rm -rf ../%s
	rm -rf bin/kernel.out

# TODO: Add `bin/kernel.bin`
../%s: clean_kernel_bin
	g++ $(FLAGS) -I include/ -o ../%s ../%s
	ld -m elf_i386 -Tlinker/kernel.ld -nostdlib --nmagic -o bin/kernel.out ../%s
	objcopy -O binary bin/kernel.out ../%s
	cd config && make format_kernel

clean_mbr_part_table:
	rm -rf bin/mbr_part_table.bin
	rm -rf bin/mbr_part_table.o
	rm -rf bin/mbr_part_table.out

bin/mbr_part_table.bin: clean_mbr_part_table
	nasm protocol/protocol_util.s -f elf32 -o bin/putil.o
	nasm protocol/enter_rmode.s -f elf32 -o bin/enter_rmode.o
	g++ $(FLAGS) -I include/ boot/mbr_part_table.cpp -o bin/mbr_part_table.o
	ld -m elf_i386 -Tlinker/mbr_part_table.ld -nostdlib --nmagic -o bin/mbr_part_table.out bin/mbr_part_table.o bin/putil.o
	objcopy -O binary bin/mbr_part_table.out bin/mbr_part_table.bin
	cd config && make format_mbr_part_table

clean_fs_worker:
	rm -rf bin/fs_worker.bin
	rm -rf bin/fs_worker.o
	rm -rf bin/fs_worker.out

bin/fs_worker.bin: clean_fs_worker
	g++ $(FLAGS) -I include/ -o bin/fs_worker.o boot/fs_worker.cpp
	ld -m elf_i386 -Tlinker/fs_worker.ld -nostdlib --nmagic -o bin/fs_worker.out bin/fs_worker.o bin/enter_rmode.o
	objcopy -O binary bin/fs_worker.out bin/fs_worker.bin
	cd config && make format_fs_worker

clean_second_stage:
	rm -rf bin/second_stage.bin
	rm -rf bin/second_stage.o
	rm -rf bin/second_stage.out

bin/second_stage.bin: clean_second_stage
	nasm boot/second_stage.s -f bin -o bin/second_stage.bin
#cd config && make format_second_stage
#g++ $(FLAGS) -I include/ -o bin/second_stage.o boot/second_stage.cpp
#ld -m elf_i386 -Tlinker/second_stage.ld -nostdlib --nmagic -o bin/second_stage.out bin/second_stage.o bin/putil.o
#objcopy -O binary bin/second_stage.out bin/second_stage.bin

clean:
	cd config && make old_makefile
	rm -rf ../%s/*.o
	rm -rf ../%s/*.bin